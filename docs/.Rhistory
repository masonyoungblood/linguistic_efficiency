geom_line(data = data.frame(rank = 1:42099, freq = est_freqs[1:42099]), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_42099, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_line(data = data.frame(rank = 1:42099, freq = est_freqs[1:42099]), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_42099, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_line(data = data.frame(rank = 1:42099, freq = est_freqs[1:42099]), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
data$cluster_3
unique(data$cluster_3)
length(unique(data$cluster_3))
#get estimated frequencies up to 100k types
est_freqs <- zipf_solve(1:length(unique(data$cluster_3)))
sim_42099 <- sample(1:length(unique(data$cluster_3)), 42099, replace = TRUE, prob = est_freqs)
data_100 <- data.frame(freq = as.numeric(sort(table(sim_100), decreasing = TRUE))/100, rank = 1:length(table(sim_100)))
data_1000 <- data.frame(freq = as.numeric(sort(table(sim_1000), decreasing = TRUE))/1000, rank = 1:length(table(sim_1000)))
data_10000 <- data.frame(freq = as.numeric(sort(table(sim_10000), decreasing = TRUE))/10000, rank = 1:length(table(sim_10000)))
data_42099 <- data.frame(freq = as.numeric(sort(table(sim_42099), decreasing = TRUE))/42099, rank = 1:length(table(sim_42099)))
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_42099, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_line(data = data.frame(rank = 1:42099, freq = est_freqs[1:42099]), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_42099, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_line(data = data.frame(rank = 1:42099, freq = est_freqs[1:42099]), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
#get estimated frequencies up to 100k types
est_freqs <- zipf_solve(1:length(unique(data$cluster_3)))
sim_42099 <- sample(1:length(unique(data$cluster_3)), 42099, replace = TRUE, prob = est_freqs)
sim_42099
data_42099 <- data.frame(freq = as.numeric(sort(table(sim_42099), decreasing = TRUE))/42099, rank = 1:length(table(sim_42099)))
data_42099
table(sim_42099)
table(sim_42099)
table(sim_42099)
length(table(sim_42099))
sim_42099 <- sample(1:length(unique(data$cluster_3)), 42099, replace = TRUE, prob = est_freqs)
data_42099 <- data.frame(freq = as.numeric(sort(table(sim_42099), decreasing = TRUE))/length(table(sim_42099)), rank = 1:length(table(sim_42099)))
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_42099, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_line(data = data.frame(rank = 1:42099, freq = est_freqs[1:42099]), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
#get estimated frequencies up to 100k types
est_freqs <- zipf_solve(1:length(unique(data$cluster_3)))
sim_42099 <- sample(1:length(unique(data$cluster_3)), 42099, replace = TRUE, prob = est_freqs)
data_42099 <- data.frame(freq = as.numeric(sort(table(sim_42099), decreasing = TRUE))/length(table(sim_42099)), rank = 1:length(table(sim_42099)))
sum(data_42099$freq)
sim_42099 <- sample(1:length(unique(data$cluster_3)), 42099, replace = TRUE, prob = est_freqs)
data_42099 <- data.frame(freq = as.numeric(sort(table(sim_42099), decreasing = TRUE))/42099, rank = 1:length(table(sim_42099)))
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_42099, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_line(data = data.frame(rank = 1:42099, freq = est_freqs[1:42099]), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_42099, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_line(data = data.frame(rank = 1:500, freq = est_freqs[1:500]), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_42099, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_line(data = data.frame(rank = 1:596, freq = est_freqs[1:596]), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
#get estimated frequencies up to 100k types
est_freqs <- zipf_solve(1:length(unique(data$cluster_3)))
est_freqs <- zipf_solve(1:length(unique(data$cluster_3)))
sim_10 <- sample(length(unique(data$cluster_3)), 10, replace = TRUE, prob = est_freqs)
sim_100 <- sample(length(unique(data$cluster_3)), 100, replace = TRUE, prob = est_freqs)
sim_1000 <- sample(length(unique(data$cluster_3)), 1000, replace = TRUE, prob = est_freqs)
sim_10000 <- sample(length(unique(data$cluster_3)), 10000, replace = TRUE, prob = est_freqs)
data_10 <- data.frame(freq = as.numeric(sort(table(sim_10), decreasing = TRUE))/10, rank = 1:length(table(sim_10)))
data_100 <- data.frame(freq = as.numeric(sort(table(sim_100), decreasing = TRUE))/100, rank = 1:length(table(sim_100)))
data_1000 <- data.frame(freq = as.numeric(sort(table(sim_1000), decreasing = TRUE))/1000, rank = 1:length(table(sim_1000)))
data_10000 <- data.frame(freq = as.numeric(sort(table(sim_10000), decreasing = TRUE))/10000, rank = 1:length(table(sim_10000)))
ggplot() +
geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
sim_100000 <- sample(length(unique(data$cluster_3)), 100000, replace = TRUE, prob = est_freqs)
data_100000 <- data.frame(freq = as.numeric(sort(table(sim_100000), decreasing = TRUE))/100000, rank = 1:length(table(sim_100000)))
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_100000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
sim_5000 <- sample(length(unique(data$cluster_3)), 5000, replace = TRUE, prob = est_freqs)
data_5000 <- data.frame(freq = as.numeric(sort(table(sim_5000), decreasing = TRUE))/5000, rank = 1:length(table(sim_5000)))
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
geom_point(data = data_5000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_100000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq)) +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
geom_point(data = data_5000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_100000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_5000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
nrow(data)
data_match <- data.frame(freq = as.numeric(sort(table(sim_match), decreasing = TRUE))/nrow(data), rank = 1:length(table(sim_match)))
sim_match <- sample(length(unique(data$cluster_3)), nrow(data), replace = TRUE, prob = est_freqs)
data_match <- data.frame(freq = as.numeric(sort(table(sim_match), decreasing = TRUE))/nrow(data), rank = 1:length(table(sim_match)))
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_5000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_5000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "#0072B2") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_5000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "forestgreen") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
geom_point(data = data_5000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "grey") +
#geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_5000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "grey") +
geom_point(data = data_10000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "grey") +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
#geom_point(data = data_100, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
#geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "red") +
#geom_point(data = data_5000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "grey") +
geom_point(data = data_1000, aes(x = rank, y = freq), size = 1, stroke = 0, color = "grey") +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
#geom_line(data = lines_b, aes(x = ranks, y = freqs, color = models), linewidth = 0.5) +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
#scale_color_manual(values = c("#0072B2", "#D55E00")) +
#labs(subtitle = paste0("Deep Split: 3 (", prettyNum(nrow(syl_types[[4]]), big.mark = ","), " Syllable Types)")) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
sim_more <- sample(length(unique(data$cluster_3)), 1000000, replace = TRUE, prob = est_freqs)
sim_match <- sample(length(unique(data$cluster_3)), nrow(data), replace = TRUE, prob = est_freqs)
sim_more <- sample(length(unique(data$cluster_3)), 1000000, replace = TRUE, prob = est_freqs)
data_match <- data.frame(freq = as.numeric(sort(table(sim_match), decreasing = TRUE))/nrow(data), rank = 1:length(table(sim_match)))
data_more <- data.frame(freq = as.numeric(sort(table(sim_more), decreasing = TRUE))/1000000, rank = 1:length(table(sim_more)))
ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "blue") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
match_plot <- ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "42,099 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
match_plot
match_plot <- ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "42,099 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
more_plot <- ggplot() +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "1,000,000 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
6.8/3
*2
png("plots/rank_count_sim.png", width = 4.4, height = 2.6, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
match_plot <- ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(10e-4, 10e-3, 10e-2)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "42,099 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
more_plot <- ggplot() +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(10e-4, 10e-3, 10e-2)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "1,000,000 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
png("plots/rank_count_sim.png", width = 4.4, height = 2.6, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
match_plot <- ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(10e-4, 10e-3, 10e-2)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "42,099 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
more_plot <- ggplot() +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(0.001, 0.01, 0.1), limits = c(0.0005, 0.5)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "1,000,000 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
png("plots/rank_count_sim.png", width = 4.4, height = 2.6, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
more_plot <- ggplot() +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(0.001, 0.01, 0.1), limits = c(0.0001, 0.2)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "1,000,000 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
png("plots/rank_count_sim.png", width = 4.4, height = 2.6, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
more_plot <- ggplot() +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(0.001, 0.01, 0.1), limits = c(0.0001, 0.1)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "1,000,000 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
png("plots/rank_count_sim.png", width = 4.4, height = 2.6, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
match_plot <- ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(0.001, 0.01, 0.1), limits = c(0.0001, 0.1)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "42,099 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
more_plot <- ggplot() +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(0.001, 0.01, 0.1), limits = c(0.0001, 0.1)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "1,000,000 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
png("plots/rank_count_sim.png", width = 4.4, height = 2.6, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
match_plot <- ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(0.0001, 0.001, 0.01, 0.1), limits = c(0.00005, 0.1)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "42,099 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
more_plot <- ggplot() +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(0.0001, 0.001, 0.01, 0.1), limits = c(0.00005, 0.1)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "1,000,000 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
png("plots/rank_count_sim.png", width = 4.4, height = 2.6, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
6.8/3
2.27*2
png("plots/rank_count_sim.png", width = 4.6, height = 2.6, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
png("plots/rank_count_sim.png", width = 4.6, height = 2.4, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
#load libraries and data
library(ggplot2)
load("data_models/zipf_rf_models.RData")
#write function that computes frequency for a given rank from the fitted function
zipf_solve <- Vectorize(function(r){
zipf_rf_models$mand$ds_3$Estimate[3]/((r + zipf_rf_models$mand$ds_3$Estimate[2])^zipf_rf_models$mand$ds_3$Estimate[1])
})
#get estimated frequencies of observed syllable types
est_freqs <- zipf_solve(1:length(unique(data$cluster_3)))
#simulate 42099 and 1M samples with probability proportion to frequency
sim_match <- sample(length(unique(data$cluster_3)), nrow(data), replace = TRUE, prob = est_freqs)
sim_more <- sample(length(unique(data$cluster_3)), 1000000, replace = TRUE, prob = est_freqs)
#restructure for plotting and compute rank
data_match <- data.frame(freq = as.numeric(sort(table(sim_match), decreasing = TRUE))/nrow(data), rank = 1:length(table(sim_match)))
data_more <- data.frame(freq = as.numeric(sort(table(sim_more), decreasing = TRUE))/1000000, rank = 1:length(table(sim_more)))
#plot the 42099 samples
match_plot <- ggplot() +
geom_point(data = data_match, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(0.0001, 0.001, 0.01, 0.1), limits = c(0.00005, 0.1)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "42,099 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
#plot the 1M samples
more_plot <- ggplot() +
geom_point(data = data_more, aes(x = rank, y = freq), size = 1, stroke = 0, color = "black") +
geom_line(data = data.frame(rank = 1:length(unique(data$cluster_3)), freq = est_freqs), aes(x = rank, y = freq), color = "#D55E00") +
scale_x_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous(trans = "log10", labels = scales::trans_format("log10", scales::math_format(10^.x)), breaks = c(0.0001, 0.001, 0.01, 0.1), limits = c(0.00005, 0.1)) +
theme_linedraw(base_size = 8, base_family = "Avenir") + annotation_logticks(size = 0.3) +
labs(subtitle = "1,000,000 Samples") +
xlab("Rank") + ylab("Count") + theme(legend.position = "none")
#combined and save
png("plots/rank_count_sim.png", width = 4.6, height = 2.4, units = "in", res = 600)
cowplot::plot_grid(match_plot, more_plot, nrow = 1)
dev.off()
